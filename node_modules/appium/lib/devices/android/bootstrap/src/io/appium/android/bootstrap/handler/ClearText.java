package io.appium.android.bootstrap.handler;

import java.util.HashMap;
import java.util.Hashtable;

import org.json.JSONException;

import com.android.uiautomator.core.UiDevice;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiSelector;

import android.os.RemoteException;
import io.appium.android.bootstrap.AndroidCommand;
import io.appium.android.bootstrap.AndroidCommandResult;
import io.appium.android.bootstrap.CommandHandler;
import io.appium.android.bootstrap.WDStatus;

public class ClearText extends CommandHandler{

	@Override
	public AndroidCommandResult execute(AndroidCommand command)
			throws JSONException {
		// TODO Auto-generated method stub
		if(!command.isElementCommand()){
			return getErrorResult("Clear text must base on a element");
		}
		else {
			try {
				final Hashtable<String, Object> params = command.params();
				String element_resource_id = params.get("resourceid").toString();
				UiDevice device = UiDevice.getInstance();
				UiObject elementObject = new UiObject(new UiSelector().resourceId(element_resource_id));
				elementObject.setText("");
				return getSuccessResult(true);
			} catch (UiObjectNotFoundException e) {
				// TODO: handle exception
				 return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,e.getMessage()); 
			}
		}
	}
}
