package io.appium.android.bootstrap.handler;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Hashtable;

import org.json.JSONException;

import android.os.RemoteException;
import io.appium.android.bootstrap.AndroidCommand;
import io.appium.android.bootstrap.AndroidCommandResult;
import io.appium.android.bootstrap.CommandHandler;
import io.appium.android.bootstrap.WDStatus;

public class Monkey extends CommandHandler{

	@Override
	public AndroidCommandResult execute(AndroidCommand command)
			throws JSONException, RemoteException, InterruptedException {
		// TODO Auto-generated method stub
		final Hashtable<String, Object> params = command.params();
		String packageName = params.get("packageName").toString();
		try {
			executeMokey(packageName);
			return getSuccessResult(true);
		} catch (Exception e) {
			// TODO: handle exception
			return new AndroidCommandResult(WDStatus.MONKEY_EXECUTE_ERROR,e.getMessage()); 
		}
	}
	
	public void executeMokey(String targetPackage) throws IOException{
		String tmpString = null;
		String monkeycommand = "monkey -p " + targetPackage + " --pct-anyevent 0 --ignore-crashes --ignore-timeouts --ignore-security-exceptions --throttle 0 -v -v -v 1000";
		//String monkeycommnad = "cat /proc/meminfo";
		ProcessBuilder pBuilder = new ProcessBuilder("/system/bin/sh");
		pBuilder.directory(new File("/"));
		// Strat the Process Builder
		Process process = pBuilder.start();
		// Get input information
		BufferedReader inBufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
		BufferedReader errBufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
		// New print writer
		PrintWriter printWriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(process.getOutputStream())), true);
		printWriter.println(monkeycommand);
		printWriter.println("exit");
		while ((tmpString = inBufferedReader.readLine()) != null) {
			if (tmpString.startsWith("MemTotal")) {
				break;
			}
		}
		inBufferedReader.close();
		errBufferedReader.close();
		process.destroy();
	}
}
